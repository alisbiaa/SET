{"version":3,"sources":["components/controllersComponents/playerNamesModal.jsx","components/controllersComponents/miscellaneousOptions.jsx","components/controllersComponents/difficulty.jsx","components/menu.jsx","components/svgComponent.jsx","components/status.jsx","components/backend/DeckManager.js","components/backend/SetAnalyser.js","components/controllers.jsx","components/SET.jsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["PlayerNamesModal","showModal","playersList","showModalHandler","nameHandler","className","onClick","map","player","index","type","value","name","required","placeholder","parseInt","onChange","event","target","MiscellaneousOptions","handleMiscellaneousOptions","Difficulty","handleDifficulty","e","Menu","handlePlayersNumber","startHandler","start","useState","setShowModal","top","when","min","max","disabled","length","SvgComponent","card","handleSelectingCard","selected","src","window","location","origin","num","shape","shade","clr","alt","Status","notifications","notification","slot","xmlns","width","height","fill","viewBox","stroke","strokeWidth","strokeLinecap","strokeLinejoin","points","x1","y1","x2","y2","message","cx","cy","r","d","shading","color","createDeck","difficulty","advancedDeck","startDeck","i","j","n","s","sh","c","push","f","shuffleDeck","deck","temporaryValue","randomIndex","currentIndex","Math","floor","random","checkSet","c1","c2","c3","isDistinct","a","b","isIdentical","Controllers","handleSelectingPlayer","handleQuit","miscellaneousOptions","score","setChecker","SET","props","state","selected_cards","undefined","find","elem","indexOf","splice","handleNotification","setState","update","findIndex","console","log","check","clear","newPlayersList","option","newMiscellaneousOptions","playersNumber","difference","Array","slice","empty_index","cards_on_board","handleSetCheckerButton","cards","result","forEach","card1","card2","card3","checkSetButton","setShower","pull3Cards","this","Fragment","hidden","includes","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a9b24a52.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction PlayerNamesModal({showModal,playersList,showModalHandler,nameHandler}) {\r\n    return (\r\n        <>\r\n            {showModal ? (\r\n                <>\r\n                    <div\r\n                        className=\"justify-center items-center flex overflow-x-hidden overflow-y-auto fixed inset-0 z-50 outline-none focus:outline-none\"\r\n                    >\r\n                        <div className=\"relative w-auto my-6 mx-auto max-w-3xl\">\r\n                            {/*content*/}\r\n                            <div\r\n                                className=\"border-0 rounded-lg shadow-lg relative flex flex-col w-full bg-Linen outline-none focus:outline-none\">\r\n                                {/*header*/}\r\n                                <div\r\n                                    className=\"flex items-start justify-between p-5 border-b border-solid border-blueGray-200 rounded-t\">\r\n                                    <h5 className=\"text-lg font-semibold\">\r\n                                        Set player's names\r\n                                    </h5>\r\n                                    <button\r\n                                        className=\"p-1 ml-auto bg-transparent border-0 text-black opacity-5 float-right text-3xl leading-none\"\r\n                                        onClick={() => showModalHandler(false)}\r\n                                    >\r\n\r\n                                    </button>\r\n                                </div>\r\n                                {/*body*/}\r\n                                <div className=\"flex flex-wrap content-center justify-center py-4 h-full\">\r\n                                    {playersList.map((player, index) =>\r\n                                        (<input\r\n                                            key={index}\r\n                                            type=\"text\"\r\n                                            className=\"outline-none rounded-lg text-center mx-1 my-2 h-14\"\r\n                                            value={player.name}\r\n                                            required\r\n                                            placeholder={'player : '+parseInt(index+1)}\r\n                                            onChange={(event) => nameHandler(event.target.value, index)}\r\n                                        />)\r\n                                    )}\r\n                                </div>\r\n                                {/*footer*/}\r\n                                <div\r\n                                    className=\"flex items-center justify-end p-6 border-t border-solid border-blueGray-200 rounded-b\">\r\n                                    <button\r\n                                        className=\"text-red-500 background-transparent font-bold uppercase px-6 py-2 text-sm outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\"\r\n                                        type=\"button\"\r\n                                        onClick={() => showModalHandler(false)}\r\n                                    >\r\n                                        Close\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"opacity-25 fixed inset-0 z-40 bg-black\"></div>\r\n                </>\r\n            ) : null}\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nexport default PlayerNamesModal;\r\n","import React from 'react';\r\n\r\nfunction MiscellaneousOptions({handleMiscellaneousOptions}) {\r\n    return (\r\n        <fieldset className=\"w-9/12 mt-6 text-lg\">\r\n            <legend className=\"text-xl font-bold mb-2\"> Miscellaneous options :</legend>\r\n\r\n            <input type=\"checkbox\"\r\n                   name=\"miscellaneousOption\"\r\n                   value=\"setChecker\"\r\n                   onChange={event => handleMiscellaneousOptions(event.target.value)}/> <label> SET checker </label>\r\n            <br/>\r\n            <input type=\"checkbox\"\r\n                   name=\"miscellaneousOption\"\r\n                   value=\"setShower\"\r\n                   onChange={event => handleMiscellaneousOptions(event.target.value)}/> <label> SET shower </label>\r\n            <br/>\r\n            <input type=\"checkbox\"\r\n                   name=\"miscellaneousOption\"\r\n                   value=\"pull3Cards\"\r\n                   onChange={event => handleMiscellaneousOptions(event.target.value)}/> <label> Pull 3 cards </label> <br/>\r\n        </fieldset>\r\n    );\r\n}\r\n\r\nexport default MiscellaneousOptions;","import React from 'react';\r\n\r\nfunction Difficulty({handleDifficulty}) {\r\n    return (\r\n        <fieldset className=\"w-9/12  mt-6 text-lg\">\r\n            <legend className=\"text-xl font-bold mb-2\"> Difficulty :</legend>\r\n            <input type=\"radio\"\r\n                   name=\"difficulty\"\r\n                   value=\"starter\"\r\n                   onChange={e => handleDifficulty(e)}\r\n            /> <label> Starter </label> <br/>\r\n            <input type=\"radio\"\r\n                   name=\"difficulty\"\r\n                   value=\"advanced\"\r\n                   onChange={e => handleDifficulty(e)}\r\n            /> <label> Advanced </label> <br/>\r\n\r\n\r\n        </fieldset>\r\n    );\r\n}\r\n\r\nexport default Difficulty;","import React, {useState} from 'react';\r\nimport PlayerNamesModal from \"./controllersComponents/playerNamesModal\";\r\nimport MiscellaneousOptions from \"./controllersComponents/miscellaneousOptions\";\r\nimport Difficulty from \"./controllersComponents/difficulty\";\r\nimport Fade from \"react-reveal/Fade\";\r\n\r\nfunction Menu({\r\n                  playersList, handlePlayersNumber, nameHandler, handleMiscellaneousOptions, handleDifficulty,\r\n                  startHandler, start\r\n              }) {\r\n    const [showModal, setShowModal] = useState(false);\r\n\r\n\r\n    return (\r\n        <Fade top when={!start}>\r\n            <div className=\"relative flex flex-wrap content-center justify-center py-4 h-full\">\r\n                <input\r\n                    className=\"w-9/12 h-14 border-2 border-CeladonBlue border-opacity-50 rounded-lg text-center my-2\"\r\n                    placeholder=\"How many player?\"\r\n                    type=\"number\"\r\n                    min=\"2\"\r\n                    max=\"5\"\r\n                    onChange={event => handlePlayersNumber(event)}/>\r\n                <button\r\n                    className=\"w-9/12 h-14 border-2 border-opacity-50 rounded-lg text-center my-2  disabled:opacity-50\"\r\n                    onClick={() => setShowModal(true)}\r\n                    disabled={playersList.length < 2}\r\n                >\r\n                    Player's names\r\n                </button>\r\n                <PlayerNamesModal\r\n                    showModal={showModal}\r\n                    showModalHandler={() => setShowModal(false)}\r\n                    playersList={playersList}\r\n                    nameHandler={nameHandler}\r\n                />\r\n                <MiscellaneousOptions\r\n                    handleMiscellaneousOptions={handleMiscellaneousOptions}\r\n                />\r\n\r\n                <Difficulty\r\n                    handleDifficulty={handleDifficulty}\r\n                />\r\n                <button\r\n                    className=\"absolute bottom-4 w-9/12 h-14 rounded-lg text-center  my-2 bg-Artichoke\"\r\n                    onClick={() => startHandler()}\r\n                >\r\n                    Start\r\n                </button>\r\n            </div>\r\n        </Fade>\r\n    );\r\n}\r\n\r\n\r\nexport default Menu;\r\n","import React from 'react';\nimport Fade from \"react-reveal/Fade\";\n\nfunction SvgComponent({card,handleSelectingCard,selected}) {\n\n    return (\n        <Fade top>\n            <div\n                className={`rounded-lg flex flex-wrap content-center justify-center cursor-pointer`}\n            >\n                <img className={`h-full  ${selected ? ' border-2 border-red-500' : ''}` }\n                     src={`${window.location.origin}/svgs/${card.num}-${card.shape}-${card.shade}-${card.clr}.svg`}\n                     alt={`${card.num}-${card.shape}-${card.shade}-${card.clr}`}\n                     onClick={() => {\n                         handleSelectingCard(card);\n                     }}\n\n                />\n            </div>\n        </Fade>\n\n    );\n}\n\nexport default SvgComponent;","import React from 'react';\n\nfunction Status({notifications}) {\n    return (\n        <div className=\"col-span-3  border-2 bg-ChampagnePink rounded-t-lg\">\n            <div className=\"flex flex-wrap content-center justify-center h-full\">\n                {notifications.map((notification,index) => {\n                    switch (notification.type) {\n                        case 'error' :\n                            return <div key={index}\n                                        className=\"flex justify-center items-center m-1 font-medium py-1 px-2 rounded-md text-red-700 bg-red-100 \">\n                                <div slot=\"avatar\">\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"100%\" fill=\"none\"\n                                         viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\"\n                                         strokeLinejoin=\"round\" className=\"feather feather-alert-octagon w-5 h-5 mx-2\">\n                                        <polygon\n                                            points=\"7.86 2 16.14 2 22 7.86 22 16.14 16.14 22 7.86 22 2 16.14 2 7.86 7.86 2\"/>\n                                        <line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"12\"/>\n                                        <line x1=\"12\" y1=\"16\" x2=\"12.01\" y2=\"16\"/>\n                                    </svg>\n                                </div>\n                                <div className=\"text-xl font-normal  max-w-full flex-initial\">\n                                    {notification.message}\n                                </div>\n                            </div>;\n                        case 'warning' :\n                            return <div\n                                key={index}\n                                className=\"flex justify-center items-center m-1 font-medium py-1 px-2 bg-Isabelline rounded-md text-gray-500 \">\n                                <div slot=\"avatar\">\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"100%\" fill=\"none\"\n                                         viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\"\n                                         strokeLinejoin=\"round\" className=\"feather feather-info w-5 h-5 mx-2\">\n                                        <circle cx=\"12\" cy=\"12\" r=\"10\"/>\n                                        <line x1=\"12\" y1=\"16\" x2=\"12\" y2=\"12\"/>\n                                        <line x1=\"12\" y1=\"8\" x2=\"12.01\" y2=\"8\"/>\n                                    </svg>\n                                </div>\n                                <div className=\"text-xl font-normal  max-w-full flex-initial\">\n                                    <div className=\"py-2\">\n                                        {notification.message}\n                                        {/*<div className=\"text-sm font-base\">More information about the message can be*/}\n                                        {/*    found <a*/}\n                                        {/*        href=\"/#\">here</a></div>*/}\n                                    </div>\n                                </div>\n                            </div>;\n                        case 'success':\n                            return <div\n                                key={index}\n                                className=\"flex justify-center items-center m-1 font-medium py-1 px-2 rounded-md text-green-700 bg-green-50\">\n                                <div slot=\"avatar\">\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"100%\" fill=\"none\"\n                                         viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\"\n                                         strokeLinejoin=\"round\" className=\"feather feather-check-circle w-5 h-5 mx-2\">\n                                        <path d=\"M22 11.08V12a10 10 0 1 1-5.93-9.14\"/>\n                                        <polyline points=\"22 4 12 14.01 9 11.01\"/>\n                                    </svg>\n                                </div>\n                                <div className=\"text-xl font-normal  max-w-full flex-initial\">\n                                    {notification.message}\n                                </div>\n                            </div>\n                        default:\n                            return null;\n\n\n                    }\n\n\n                })}\n\n            </div>\n\n        </div>\n    );\n}\n\nexport default Status;","const num = [1, 2, 3];\nconst shape = [\"moon\", \"wave\" , \"square\"];\nconst shading = [\"empty\", \"hashed\", \"filled\"];\nconst color = [\"red\", \"orange\", \"green\"];\n\n\nexport const createDeck = (difficulty) => {\n    let advancedDeck = []; // 81 card\n    let startDeck = []; // 27 card\n\n    let i = 0, j = 0;\n    for (let n of num)\n        for (let s of shape)\n            for (let sh of shading)\n                for (let c of color) {\n                    advancedDeck.push({num: n, shape: s, shade: sh, clr: c, index: i});\n                    i++;\n                }\n    for (let n of num) {\n        for (let sh of shape)\n            for (let c of color) {\n                startDeck.push({num: n, shape: sh, shade: \"filled\", clr: c, index: j});\n                j++;\n            }\n    }\n    if (difficulty === \"starter\") return shuffleDeck(startDeck);\n    else if (difficulty === \"advanced\") return shuffleDeck(advancedDeck);\n}\n\nlet shuffleDeck = (deck) => {\n    let currentIndex = deck.length, temporaryValue, randomIndex;\n\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n\n        // Pick a remaining element...\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex -= 1;\n\n        // And swap it with the current element.\n        temporaryValue = deck[currentIndex];\n        deck[currentIndex] = deck[randomIndex];\n        deck[randomIndex] = temporaryValue;\n    }\n    return deck;\n}\n\n\n\n","\nexport const checkSet = (c1, c2, c3) => {\n    function isDistinct(a, b, c) {\n        return (a !== b) && (a !== c) && (c !== b);\n    }\n    function isIdentical(a, b, c) {\n        return (a === b) && (a === c);\n    }\n\n    function checkColor() {\n        return isDistinct(c1.clr, c2.clr, c3.clr) || isIdentical(c1.clr, c2.clr, c3.clr);\n    }\n\n    function checkNum() {\n        return isDistinct(c1.num, c2.num, c3.num) || isIdentical(c1.num, c2.num, c3.num);\n    }\n\n    function checkShade() {\n        return isDistinct(c1.shade, c2.shade, c3.shade) || isIdentical(c1.shade, c2.shade, c3.shade);\n    }\n\n    function checkShape() {\n        return isDistinct(c1.shape, c2.shape, c3.shape) || isIdentical(c1.shape, c2.shape, c3.shape)\n    }\n    return checkColor() && checkNum() && checkShade() && checkShape();\n}\n\nexport const checkSetButton = ([...cards]) => {\n    // let card1,card2,card3 ;\n    let result = false ;\n    cards.forEach(card1 => {\n        cards.forEach(card2 => {\n            if(card1 !== card2)\n                cards.forEach(card3 => {\n                    if(card3!== card1 && card3 !== card2) {\n                        result = checkSet(card1,card2,card3) ;\n                        if(result) return true ;\n                    }\n                })\n        })\n    })\n    return result ;\n}","// @flow \r\nimport * as React from 'react';\r\nimport Fade from \"react-reveal/Fade\";\r\n\r\n\r\nexport const Controllers = ({playersList, handleSelectingPlayer, handleQuit, start,miscellaneousOptions}) => {\r\n    return (\r\n        <Fade top when={start}>\r\n            <div className=\"flex flex-wrap h-full \">\r\n                <div className=\"flex flex-wrap content-center justify-center py-4 h-3/5 w-full\">\r\n                    {playersList.map((player, index) => (\r\n                        <button\r\n                            key={index}\r\n                            className={`w-9/12 h-14 border-2 rounded-lg text-center my-2  ${!player.selected ? 'bg-Isabelline ' : ' bg-AntiqueBrass '} disabled:opacity-50 ${player.disabled ? '' : \" hover:opacity-70\"} focus:outline-none`}\r\n                            onClick={() => handleSelectingPlayer(player)}\r\n                            disabled={player.disabled}\r\n                        >\r\n                            {player.name}\r\n\r\n                            <div>\r\n                                {player.score}\r\n                            </div>\r\n                        </button>\r\n                    ))}\r\n                </div>\r\n                <div className=\"flex flex-wrap content-center justify-center py-4 h-1/5 w-full focus:outline-none\">\r\n                    {miscellaneousOptions.setChecker ?\r\n                        <button\r\n                            className={`w-9/12 h-14 border-2 rounded-lg text-center my-2`}\r\n                        >\r\n                            SET Checker</button>\r\n                        : null}\r\n                </div>\r\n\r\n                <div className=\"flex flex-wrap content-center justify-center py-4 h-1/5 w-full \">\r\n                    <button\r\n                        className=\"w-9/12 h-14 rounded-lg text-center my-2 bg-Artichoke\"\r\n                        onClick={() => handleQuit()}\r\n                    >\r\n                        Quit\r\n                    </button>\r\n                </div>\r\n\r\n            </div>\r\n        </Fade>\r\n\r\n\r\n    );\r\n\r\n};\r\n\r\n","import React, {Component} from 'react';\nimport Menu from \"./menu\";\nimport SvgComponent from \"./svgComponent\";\nimport Status from \"./status\";\nimport {createDeck} from \"./backend/DeckManager\";\nimport {checkSet,checkSetButton} from \"./backend/SetAnalyser\";\nimport {Controllers} from \"./controllers\";\n\n\nclass SET extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            notifications: [\n                {message:'this is an error message', type: 'error'},\n                {message:'this is an error message', type: 'warning'},\n                {message:'this is an error message', type: 'success'},\n            ],\n            selected_cards: [],\n            cards_on_board: 12, // usually 12 card till we add 3 more\n            deck: [],\n            // controllers\n            playersNumber: 0,\n            playersList: [],\n            miscellaneousOptions: {\n                setChecker: false,\n                setShower: false,\n                pull3Cards: false\n            },\n            difficulty: '',\n            start: false,\n            // menu\n        }// warning, error, success\n    }\n\n    handleSelectingCard = (card) => {\n\n        const {selected_cards,playersList} = this.state;\n        if (playersList.find(elem => elem.selected === true) === undefined) {\n            this.handleNotification('Select a player first.', 'warning', true);\n            return;\n        }\n        const index = selected_cards.indexOf(card);\n        if (selected_cards.length < 3) {\n            index === -1 ? selected_cards.push(card) : selected_cards.splice(index, 1);\n        } else {\n            index !== -1 ? selected_cards.splice(index, 1) :\n                this.handleNotification('You can NOT select more than 3 cards at a time.', 'warning', true);\n        }\n        this.setState({selected_cards: selected_cards});\n        this.update();\n\n    }\n    update = () => {\n        const {selected_cards, deck,playersList} = this.state;\n        if (!(selected_cards.length === 3)) return;\n        const index = playersList.findIndex(elem => elem.selected === true);\n        console.log(index);\n        const player = playersList[index];\n        console.log(player);\n        if (checkSet(selected_cards[0], selected_cards[1], selected_cards[2])) {\n            this.handleNotification('Correct combination', 'success', true);\n            player.score += 1;\n            // updating cards\n            for (let i = 0; i < 3; i++) {\n                const index = deck.indexOf(selected_cards[i]);\n                if (deck.length > 12) {\n                    deck[index] = deck[12];\n                    deck.splice(12, 1);\n                } else\n                    deck.splice(index, 1);\n            }\n            this.setState({deck: deck})\n            // enabling all players\n            for (let i = 0; i < playersList.length; i++)\n                playersList[i].disabled = false;\n\n        } else{\n            this.handleNotification('Wrong combination', 'error', true);\n            player.score -= 1;\n            player.disabled = true;\n            let check = true;\n            playersList.map(player => check && (check = player.disabled));\n            if (check) {\n                for (let i = 0; i < playersList.length; i++)\n                    playersList[i].disabled = false;\n            }\n        }\n        player.selected = false;\n        playersList[index] = player;\n        this.setState({selected_cards: [],playersList:playersList})\n    }\n\n    handleNotification = (message, type, clear = false) => {\n        let {notifications} = this.state;\n        if (clear) notifications = [];\n        const notification = {message: message, type: type};\n        notifications.push(notification);\n        this.setState({notifications: notifications});\n    }\n\n\n    // controllers handlers :\n\n    nameHandler = (name, index) => {\n        let newPlayersList = [...this.state.playersList];\n        console.log(index);\n        newPlayersList[index] = {name: name, selected: false, score: 0, disabled:false};\n        this.setState({playersList: newPlayersList});\n    }\n    handleMiscellaneousOptions = (option) => {\n        const newMiscellaneousOptions = this.state.miscellaneousOptions;\n        newMiscellaneousOptions[option] = !newMiscellaneousOptions[option];\n        this.setState({miscellaneousOptions: newMiscellaneousOptions});\n    }\n    handleDifficulty = (e) => {\n        const {name, value} = e.target;\n        this.setState({\n            [name]: value\n        });\n    }\n    handlePlayersNumber = (event) => {\n        const {playersList, playersNumber} = this.state;\n        this.setState({playersNumber: parseInt(event.target.value)});\n        const difference = parseInt(event.target.value) - playersList.length;\n        difference >= 0 ?\n            this.setState({\n                playersList: [...playersList, ...Array(difference).fill({\n                    name: '',\n                    selected: false,\n                    score: 0,\n                    disabled:false,\n                })]\n            }) :\n            this.setState({playersList: playersList.slice(0, playersNumber - 1)});\n    }\n    startHandler = () => {\n        const {playersList, playersNumber, difficulty, start} = this.state;\n        const empty_index = playersList.findIndex(player => player.name === '');\n        if (playersNumber === 0)\n            this.handleNotification('Enter number of players.', 'error', true);\n        else if (empty_index !== -1)\n            this.handleNotification('Enter players\\' names.', 'error', true);\n        else if(difficulty==='')\n            this.handleNotification('Choose difficulty', 'error', true);\n\n        else {\n            this.handleNotification('Game Started', 'success', true);\n            this.setState({deck: createDeck(difficulty)})\n            this.setState({start: !start});\n        }\n    }\n\n    // menu controllers :\n\n    handleQuit = () => {\n        const {start} = this.state;\n        this.setState({\n            start: !start,\n            selected_cards: [],\n            cards_on_board: 12,\n            playersList: this.state.playersList.map((player) => {\n                player.selected=false;\n                player.disabled=false;\n                player.score=0;\n                return player;\n            }),\n            deck: [],\n            });\n        this.handleNotification('Game over', 'warning', true);\n\n    }\n    handleSelectingPlayer = (player) => {\n        const {playersList} = this.state;\n        const index = playersList.indexOf(player);\n        if (player.selected) {\n            player.selected = false;\n            playersList[index] = player;\n        } else {\n            if (playersList.find(elem => elem.selected === true) !== undefined) {\n                this.handleNotification('You can only select one player at a time', 'error', true);\n                return;\n            } else {\n                this.handleNotification(`Player : ${player.name} has been selected.`, 'warning', true);\n                player.selected = true;\n                playersList[index] = player;\n            }\n        }\n        this.setState({playersList: playersList})\n    }\n    handleSetCheckerButton = () => {\n        checkSetButton(this.state.deck.slice(0, this.state.cards_on_board)) ?\n            this.handleNotification('No, there is no SET on the board', 'warning', true) :\n            this.handleNotification('Yes, there is a SET on the board', 'warning', true);\n    }\n\n\n    render() {\n        const {notifications, playersList, miscellaneousOptions, cards_on_board, start} = this.state;\n        return (\n            <React.Fragment>\n                <div className=\"row-span-6 border-2 border-ChampagnePink rounded-t-lg bg-ChampagnePink\">\n                    <span hidden={!start}>\n                        <Controllers\n                            miscellaneousOptions={miscellaneousOptions}\n                            playersList={playersList}\n                            handleSelectingPlayer={this.handleSelectingPlayer}\n                            handleQuit={this.handleQuit}\n                            start={start}\n                        />\n                    </span>\n                    <span hidden={start}>\n                        <Menu\n                            playersList={playersList}\n                            handlePlayersNumber={this.handlePlayersNumber}\n                            nameHandler={this.nameHandler}\n                            handleMiscellaneousOptions={this.handleMiscellaneousOptions}\n                            handleDifficulty={this.handleDifficulty}\n                            startHandler={this.startHandler}\n                            start={start}\n                        />\n                    </span>\n\n\n\n                </div>\n                <Status notifications={notifications}/>\n                <div className=\"col-span-3 row-span-5 \">\n                    <div className=\"flex flex-wrap content-center justify-center h-full\">\n                        <div className=\"grid grid-flow-col grid-rows-4 h-full\">\n                            {\n                                this.state.deck.slice(0, cards_on_board).map((card, index) =>\n                                        <SvgComponent\n                                            key={index}\n                                            card={card}\n                                            handleSelectingCard={this.handleSelectingCard}\n                                            selected={this.state.selected_cards.includes(card)}\n                                        />\n                                    //{num: n, shape: s, shade: sh, clr: c, index: i}\n                                )\n                            }\n                        </div>\n                    </div>\n                </div>\n\n            </React.Fragment>\n        );\n    }\n}\n\n\nSET.propTypes = {};\n\nexport default SET;\n","import React from 'react';\nimport './css/App.css';\nimport SET from \"./components/SET\";\n\nfunction App() {\n    return (\n        // controllers\n        <div className=\"bg-Isabelline\">\n            <div className=\"container mx-auto px-4 h-screen\">\n                <div className=\"grid grid-rows-6 grid-cols-4 gap-4 py-10 h-full\">\n                    <SET/>\n                </div>\n            </div>\n        </div>\n    );\n}\n\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}